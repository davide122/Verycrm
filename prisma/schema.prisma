generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Servizio {
  id            Int                  @id @default(autoincrement())
  nome          String
  prezzoCliente Float
  costoNetto    Float
  ivaPercent    Float                @default(0)
  operazioni    ServizioEffettuato[]
}

model ServizioEffettuato {
  id              Int             @id @default(autoincrement())
  servizioId      Int
  quantita        Int
  prezzoCliente   Float
  costoTotale     Float
  guadagno        Float
  turno           String
  createdAt       DateTime        @default(now())
  sede            String
  metodoPagamento MetodoPagamento @default(CONTANTI)
  servizio        Servizio        @relation(fields: [servizioId], references: [id])
}

model Spedizione {
  id                 Int             @id @default(autoincrement())
  peso               Float
  pellicola          Boolean         @default(false)
  imballaggio        Boolean         @default(false)
  prezzoPoste        Float
  iva                Float
  rimborsoSpese      Float
  prezzoCliente      Float
  guadagno           Float
  turno              String
  createdAt          DateTime        @default(now())
  sede               String
  metodoPagamento    MetodoPagamento @default(CONTANTI)
  quantitaImballaggi Int             @default(1)
  quantitaPellicole  Int             @default(1)
  nominativoMittente String?
}

model Chiusura {
  id             Int      @id @default(autoincrement())
  data           DateTime
  turno          String
  totaleEntrate  Float
  totaleCosti    Float
  totaleGuadagni Float
  chiuso         Boolean  @default(true)
}

model SaldoDroppoint {
  id            Int                 @id @default(autoincrement())
  data          DateTime            @unique @db.Date
  saldoIniziale Float
  saldoFinale   Float?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  ricariche     RicaricaDroppoint[]
}

model RicaricaDroppoint {
  id          Int            @id @default(autoincrement())
  saldoId     Int
  importo     Float
  descrizione String?
  turno       String
  sede        String
  createdAt   DateTime       @default(now())
  saldo       SaldoDroppoint @relation(fields: [saldoId], references: [id], onDelete: Cascade)
}

model TodoTask {
  id           Int       @id @default(autoincrement())
  titolo       String
  descrizione  String?
  dataScadenza DateTime?
  orarioInizio DateTime?
  orarioFine   DateTime?
  stato        StatoTask @default(DA_FARE)
  priorita     Int       @default(0)
  sede         String
  assegnatoA   String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum MetodoPagamento {
  CONTANTI
  POS
}

enum StatoTask {
  DA_FARE
  IN_CORSO
  COMPLETATO
  ANNULLATO
}
