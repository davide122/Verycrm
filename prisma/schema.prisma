// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Servizio {
  id            Int      @id @default(autoincrement())
  nome          String
  prezzoCliente Float    // Prezzo che paga il cliente
  costoNetto    Float    // Costo a noi, senza IVA
  ivaPercent    Float    @default(22)
  operazioni    ServizioEffettuato[]
}

enum MetodoPagamento {
  CONTANTI
  POS
}

model ServizioEffettuato {
  id            Int      @id @default(autoincrement())
  servizioId    Int      // Torna a Int per la relazione
  servizio      Servizio @relation(fields: [servizioId], references: [id])
  quantita      Int
  prezzoCliente Float
  costoTotale   Float
  guadagno      Float
  turno         String   // mattina / pomeriggio
  sede          String   // aragona / porto-empedocle
  metodoPagamento MetodoPagamento @default(CONTANTI)
  createdAt     DateTime @default(now())
}

model Spedizione {
  id            Int      @id @default(autoincrement())
  peso          Float
  pellicola     Boolean  @default(false)
  quantitaPellicole Int  @default(1)  // Quantità pellicole (x1, x2, x3, x4)
  imballaggio   Boolean  @default(false)
  quantitaImballaggi Int @default(1)  // Quantità imballaggi (x1, x2, x3, x4)
  prezzoPoste   Float    // Prezzo base Poste
  iva           Float
  rimborsoSpese Float
  prezzoCliente Float    // Prezzo al cliente
  guadagno      Float
  turno         String
  sede          String   // aragona / porto-empedocle
  metodoPagamento MetodoPagamento @default(CONTANTI)
  createdAt     DateTime @default(now())
}

model Chiusura {
  id             Int      @id @default(autoincrement())
  data           DateTime
  turno          String
  totaleEntrate  Float
  totaleCosti    Float
  totaleGuadagni Float
  chiuso         Boolean  @default(true)
}

model SaldoDroppoint {
  id          Int      @id @default(autoincrement())
  data        DateTime @db.Date
  saldoIniziale Float  // Saldo all'apertura del sistema
  saldoFinale   Float? // Saldo a chiusura (opzionale)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relazione con le ricariche
  ricariche   RicaricaDroppoint[]
  
  @@unique([data]) // Un solo record per data
}

model RicaricaDroppoint {
  id          Int      @id @default(autoincrement())
  saldoId     Int
  saldo       SaldoDroppoint @relation(fields: [saldoId], references: [id], onDelete: Cascade)
  importo     Float
  descrizione String?
  turno       String   // mattina / pomeriggio
  sede        String   // aragona / porto-empedocle
  createdAt   DateTime @default(now())
}
